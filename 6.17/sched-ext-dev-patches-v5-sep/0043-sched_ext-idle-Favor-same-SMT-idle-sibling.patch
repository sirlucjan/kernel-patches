From 82420f50899007e4de9ba1b56f0466f7eab9f997 Mon Sep 17 00:00:00 2001
From: Andrea Righi <arighi@nvidia.com>
Date: Wed, 17 Sep 2025 22:13:53 +0200
Subject: [PATCH 43/44] sched_ext: idle: Favor same SMT idle sibling

If no full-idle SMT core is available, check whether the other sibling
of the current SMT core is idle before migrating to any other random
partially-idle SMT core in the system.

This logic is also used in the fair class, see commit c722f35b513f8
("sched/fair: Bring back select_idle_smt(), but differently").

Signed-off-by: Andrea Righi <arighi@nvidia.com>
---
 kernel/sched/ext_idle.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/kernel/sched/ext_idle.c b/kernel/sched/ext_idle.c
index 69700788b..906188e4b 100644
--- a/kernel/sched/ext_idle.c
+++ b/kernel/sched/ext_idle.c
@@ -629,6 +629,18 @@ s32 scx_select_cpu_dfl(struct task_struct *p, s32 prev_cpu, u64 wake_flags,
 		goto out_unlock;
 	}
 
+	if (sched_smt_active()) {
+		/*
+		 * If we couldn't find any full-idle SMT core, check if the
+		 * other sibling in the same SMT core is idle before
+		 * jumping to another partially-idle SMT core.
+		 */
+		for_each_cpu(cpu, cpu_smt_mask(prev_cpu))
+			if (cpu != prev_cpu && cpumask_test_cpu(cpu, allowed) &&
+			    scx_idle_test_and_clear_cpu(cpu))
+				goto out_unlock;
+	}
+
 	/*
 	 * Search for any idle CPU in the same LLC domain.
 	 */
-- 
2.51.2

